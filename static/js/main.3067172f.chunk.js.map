{"version":3,"sources":["component/card/card.component.jsx","component/card-list/cardlist.component.jsx","component/search-box/searchbox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monsters","id","name","email","Cardlist","map","el","Searchbox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","res","json","setState","this","filterMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAWeA,G,YARF,SAAAC,GAAK,OACV,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,SAASC,GAAzC,4BACtB,6BAAKL,EAAMI,SAASE,OACpB,4BAAIN,EAAMI,SAASG,aCHhB,SAASC,EAASR,GAC7B,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMI,SAASK,KAAI,SAACC,GAAD,OAAQ,cAAC,EAAD,CAAkBN,SAAUM,GAAjBA,EAAGL,S,MCJvC,SAASM,EAAT,GAAiD,IAA7BC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,aAC5C,OACI,8BACA,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAWF,M,UC2BRG,E,kDA/Bb,aAAgB,IAAD,8BACb,gBAEKC,MAAQ,CACXb,SAAU,GACVc,YAAa,IALF,E,gEAUM,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAG,OAAI,EAAKE,SAAS,CAACnB,SAAUiB,S,+BAG9B,IAAD,SAC2BG,KAAKP,MAA/Bb,EADD,EACCA,SAAUc,EADX,EACWA,YACZO,EAAkBrB,EAASsB,QAAO,SAAAhB,GAAE,OAAIA,EAAGJ,KAAKqB,cAAcC,SAASV,EAAYS,kBACzF,OACE,sBAAK1B,UAAU,MAAf,UACE,kDACA,cAACU,EAAD,CACAC,YAAY,kBACZC,aAAc,SAAAgB,GAAC,OAAI,EAAKN,SAAS,CAACL,YAAaW,EAAEC,OAAOC,WACxD,cAACvB,EAAD,CAAUJ,SAAUqB,W,GA1BVO,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3067172f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nconst Card = props => ( \r\n        <div className=\"card-container\">\r\n            <img alt=\"monster\" src={`https://robohash.org/${props.monsters.id}?set=set2&size=180x180`}/>\r\n            <h2>{props.monsters.name}</h2>\r\n            <p>{props.monsters.email}</p>\r\n        </div>\r\n    )\r\n\r\nexport default Card","import React from 'react'\r\nimport './cardlist.styles.css'\r\nimport Card from '../card/card.component'\r\n\r\nexport default function Cardlist(props) {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.monsters.map((el) => <Card key={el.id} monsters={el}/>)}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './searchbox.styles.css'\r\n\r\nexport default function Searchbox({placeholder, handleChange}) {\r\n    return (\r\n        <div >\r\n        <input\r\n            className='search' \r\n            type=\"search\" \r\n            placeholder={placeholder} \r\n            onChange= {handleChange}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\nimport Cardlist from './component/card-list/cardlist.component';\nimport Searchbox from './component/search-box/searchbox.component';\nimport './App.css';\n \nclass App extends Component {\n  constructor () {\n    super()\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(res => res.json())\n    .then(res => this.setState({monsters: res}))\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filterMonsters =  monsters.filter(el => el.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <Searchbox \n        placeholder=\"search monsters\"\n        handleChange={e => this.setState({searchField: e.target.value})}/>\n        <Cardlist monsters={filterMonsters}/>\n      </div>\n    );\n  }\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}